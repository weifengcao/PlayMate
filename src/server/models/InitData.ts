// The tables and datas defined below are imported into the database,
// but they are not used by the Node server.
// It's for a specific Data Analyst question.
// You are not supposed to retrieve data from this file.
// You should connect to the database to get them.
// This exercise aims to simulate a situation
// where the data was previously imported in the database,
// but is not present in any other location.

const { promisify } = require('util');
const fs = require('node:fs');
const exec = promisify(require('child_process').exec)

export async function populateDogWalks() {

  const connectCmd = 'PGPASSWORD="postgres" psql -h 127.0.0.1 -p 5432 -U postgres -d postgres';
  const sqlCreateImpDogs = 'CREATE TABLE IF NOT EXISTS imported_dogs (idog_id SERIAL PRIMARY KEY, name VARCHAR (50) NOT NULL, breed VARCHAR (50) NOT NULL);'
  const sqlCreateImpDogwalks = 'CREATE TABLE IF NOT EXISTS  imported_dog_walks (path_id SERIAL PRIMARY KEY, imported_dog_ref INT, distance_meter FLOAT, walk_start TIMESTAMP, walk_end TIMESTAMP, FOREIGN KEY (imported_dog_ref) REFERENCES imported_dogs(idog_id));';
  const sqlCount = 'SELECT count(*) FROM imported_dog_walks;'

  await exec(connectCmd +' -c "' + sqlCreateImpDogs + '"');
  await exec(connectCmd +' -c "' + sqlCreateImpDogwalks + '"');

  const sqlOutputCount = await exec(connectCmd + ' -c "' + sqlCount + '"');
  console.log("count dog walks:", sqlOutputCount);
  if (sqlOutputCount.stdout.includes(" 0\n")) {
    console.log("Adding dummy dog-walks data.");
    const sqlFile = './init_dog_walks.sql'
    const sqlPopulateImpTable = `
    INSERT INTO imported_dogs(name, breed) VALUES
    ('Fluffy', 'Saint-Bernard'),
    ('Magdalena', 'Poodle'),
    ('Mopsy', 'Saint-Bernard'),
    ('Kiki', 'Poodle'),
    ('Berlin', 'Saint-Bernard'),
    ('Bobby', 'Labrador'),
    ('Leia', 'Labrador'),
    ('Mia', 'Newfoundland dog'),
    ('Alfonso', 'Newfoundland dog'),
    ('Bud', 'Poodle'),
    ('Katsumi', 'Saint-Bernard'),
    ('Laika', 'Labrador'),
    ('Pluto', 'Poodle'),
    ('Cappuccino', 'Newfoundland dog'),
    ('Jezebel', 'Labrador'),
    ('Cristos', 'Poodle'),
    ('Bindie', 'Saint-Bernard');

    INSERT INTO imported_dog_walks(imported_dog_ref, distance_meter, walk_start, walk_end)
    VALUES (5, 3592.63, '2023-11-25 20:31:01', '2023-11-26 00:31:58'),
    (10, 4315.63, '2023-07-31 18:23:35', '2023-07-31 19:38:52'),
    (16, 3319.01, '2024-01-26 04:08:16', '2024-01-26 06:04:43'),
    (7, 6887.2, '2023-06-05 03:26:11', '2023-06-05 04:14:39'),
    (10, 3364.02, '2023-09-29 04:44:49', '2023-09-29 06:10:50'),
    (1, 9197.3, '2023-10-17 18:24:25', '2023-10-17 21:57:37'),
    (11, 9662.31, '2024-03-15 22:51:16', '2024-03-16 00:47:09'),
    (17, 6385.49, '2023-08-07 00:59:43', '2023-08-07 03:02:58'),
    (12, 5095.09, '2023-09-09 09:52:44', '2023-09-09 11:45:53'),
    (7, 8039.8, '2023-10-05 20:52:10', '2023-10-05 22:04:55'),
    (9, 9114.88, '2023-10-12 03:03:07', '2023-10-12 04:34:33'),
    (1, 1089.32, '2024-03-18 01:25:39', '2024-03-18 03:14:45'),
    (17, 6065.61, '2024-02-05 21:59:40', '2024-02-05 23:24:21'),
    (15, 6776.55, '2024-03-19 04:09:52', '2024-03-19 06:31:53'),
    (12, 8600.98, '2024-03-20 02:33:54', '2024-03-20 03:21:46'),
    (4, 3103.01, '2024-05-29 04:59:05', '2024-05-29 06:42:38'),
    (6, 5291.73, '2024-03-17 03:19:23', '2024-03-17 05:21:08'),
    (6, 8893.74, '2023-08-20 07:25:17', '2023-08-20 08:52:05'),
    (9, 9680.75, '2023-08-01 15:02:00', '2023-08-01 18:17:46'),
    (5, 9802.55, '2023-09-11 13:57:34', '2023-09-11 17:28:19'),
    (17, 4172.62, '2023-05-10 05:07:40', '2023-05-10 05:57:38'),
    (5, 9688.18, '2023-04-18 07:34:36', '2023-04-18 11:29:27'),
    (10, 5354.66, '2023-12-29 09:41:22', '2023-12-29 11:36:50'),
    (4, 4290.88, '2024-01-10 17:32:45', '2024-01-10 19:20:11'),
    (12, 7581.89, '2023-12-02 01:36:27', '2023-12-02 03:15:51'),
    (15, 7249.2, '2023-10-14 06:16:40', '2023-10-14 07:06:31'),
    (3, 9259.04, '2024-01-22 12:31:22', '2024-01-22 13:51:10'),
    (3, 4510.54, '2024-04-25 06:04:56', '2024-04-25 06:35:41'),
    (16, 4984.68, '2024-02-22 15:43:28', '2024-02-22 17:43:15'),
    (17, 9526.4, '2023-07-17 03:06:56', '2023-07-17 03:42:20'),
    (7, 5191.42, '2024-05-13 17:47:44', '2024-05-13 19:42:47'),
    (5, 4721.37, '2023-12-31 17:29:01', '2023-12-31 20:46:09'),
    (12, 7161.38, '2024-04-11 16:23:47', '2024-04-11 17:26:33'),
    (3, 9062.49, '2023-12-28 16:49:14', '2023-12-28 18:59:34'),
    (11, 6597.97, '2023-06-15 13:19:34', '2023-06-15 16:35:02'),
    (2, 4799.21, '2023-09-21 08:51:44', '2023-09-21 10:35:26'),
    (7, 5256.4, '2023-11-25 19:00:15', '2023-11-25 21:17:56'),
    (11, 3772.88, '2023-12-24 23:03:21', '2023-12-25 00:30:37'),
    (2, 4747.03, '2023-09-06 09:43:30', '2023-09-06 11:40:28'),
    (4, 4006.33, '2023-06-22 02:30:37', '2023-06-22 04:04:57'),
    (7, 7375.17, '2023-04-05 15:26:27', '2023-04-05 16:23:01'),
    (10, 5826.52, '2024-03-26 21:37:37', '2024-03-26 22:41:33'),
    (17, 7563.54, '2024-05-15 05:47:08', '2024-05-15 07:05:42'),
    (17, 1508.81, '2023-05-18 02:06:52', '2023-05-18 04:40:08'),
    (7, 6448.41, '2023-08-27 02:23:37', '2023-08-27 04:32:55'),
    (2, 3547.37, '2023-05-17 01:08:18', '2023-05-17 03:00:59'),
    (8, 5560.96, '2023-05-24 07:41:27', '2023-05-24 09:17:38'),
    (15, 7388.63, '2024-04-22 20:47:57', '2024-04-22 23:27:14'),
    (9, 7551.98, '2024-02-19 02:40:32', '2024-02-19 04:14:48'),
    (5, 2734.35, '2023-07-09 11:07:01', '2023-07-09 11:43:07'),
    (5, 2468.73, '2023-10-20 09:44:16', '2023-10-20 13:42:39'),
    (2, 5403.22, '2023-12-11 12:00:08', '2023-12-11 13:44:11'),
    (8, 4349.56, '2024-05-13 00:24:42', '2024-05-13 03:03:47'),
    (16, 2836.13, '2024-04-27 01:48:30', '2024-04-27 02:51:54'),
    (14, 6902.31, '2024-03-08 14:50:57', '2024-03-08 16:40:21'),
    (13, 2344.7, '2023-04-09 06:36:30', '2023-04-09 08:35:39'),
    (4, 2513.92, '2023-06-01 22:42:24', '2023-06-02 00:25:37'),
    (11, 4770.54, '2023-11-25 14:25:00', '2023-11-25 16:41:08'),
    (3, 3896.3, '2023-04-02 22:34:18', '2023-04-03 00:29:32'),
    (15, 6078.93, '2024-03-25 07:52:13', '2024-03-25 09:07:19'),
    (1, 1018.36, '2024-05-12 13:20:53', '2024-05-12 17:17:11'),
    (12, 8857.65, '2023-09-13 15:51:55', '2023-09-13 17:25:31'),
    (17, 7978.93, '2023-09-06 13:12:04', '2023-09-06 14:00:13'),
    (10, 3942.12, '2023-08-31 13:30:11', '2023-08-31 14:56:54'),
    (7, 5174.56, '2024-03-24 08:40:14', '2024-03-24 11:08:58'),
    (4, 3788.19, '2024-02-28 22:28:57', '2024-02-29 00:27:20'),
    (5, 5122.96, '2023-12-08 00:18:03', '2023-12-08 03:12:26'),
    (16, 4956.83, '2023-11-18 02:29:48', '2023-11-18 03:50:17'),
    (17, 3115.51, '2023-08-11 16:28:36', '2023-08-11 17:30:36'),
    (7, 7829.32, '2023-09-17 15:58:10', '2023-09-17 16:43:48'),
    (3, 7444.6, '2024-01-21 16:54:44', '2024-01-21 19:52:26'),
    (12, 8044.55, '2024-02-12 17:30:37', '2024-02-12 20:01:33'),
    (9, 5893.55, '2023-05-01 02:28:16', '2023-05-01 04:36:30'),
    (1, 8259.79, '2023-12-31 10:36:12', '2023-12-31 11:47:14'),
    (10, 5789.29, '2024-03-04 05:24:05', '2024-03-04 07:01:00'),
    (1, 7463.18, '2023-04-07 13:57:36', '2023-04-07 17:11:22'),
    (8, 10911.84, '2023-10-09 07:44:27', '2023-10-09 09:58:36'),
    (17, 3599.06, '2023-11-16 00:16:03', '2023-11-16 01:09:16'),
    (16, 3007.12, '2023-07-17 09:15:59', '2023-07-17 10:39:40'),
    (9, 9884.97, '2023-07-06 09:26:02', '2023-07-06 12:39:52'),
    (16, 5809.06, '2023-09-24 12:15:12', '2023-09-24 13:43:14'),
    (11, 5632.76, '2023-11-12 10:34:39', '2023-11-12 13:07:20'),
    (4, 2557.77, '2023-12-18 01:19:20', '2023-12-18 02:31:44'),
    (4, 2779.25, '2024-02-07 06:35:19', '2024-02-07 07:43:04'),
    (2, 3366.19, '2023-07-02 21:13:17', '2023-07-02 22:14:02'),
    (2, 5658.0, '2023-08-13 00:23:07', '2023-08-13 01:41:53'),
    (17, 5952.31, '2023-08-31 21:32:00', '2023-09-01 00:16:36'),
    (10, 4068.46, '2024-02-12 12:20:59', '2024-02-12 13:48:57'),
    (7, 6423.68, '2024-04-29 05:03:54', '2024-04-29 05:52:21'),
    (4, 3147.25, '2023-09-19 23:16:15', '2023-09-20 01:14:40'),
    (17, 4634.08, '2024-01-16 15:31:43', '2024-01-16 18:07:14'),
    (12, 6397.72, '2024-03-18 19:32:00', '2024-03-18 20:35:14'),
    (13, 5745.02, '2023-10-29 15:55:49', '2023-10-29 17:06:49'),
    (13, 2521.16, '2023-09-12 11:22:11', '2023-09-12 12:24:50'),
    (6, 6239.41, '2024-01-02 22:37:34', '2024-01-03 00:04:58'),
    (9, 7835.13, '2023-06-13 12:13:27', '2023-06-13 13:48:32'),
    (1, 5711.1, '2023-12-19 14:18:05', '2023-12-19 15:07:11'),
    (11, 1967.82, '2023-09-22 03:55:47', '2023-09-22 06:56:10'),
    (15, 5337.55, '2024-03-20 23:41:22', '2024-03-21 01:06:58'),
    (16, 3039.48, '2023-10-24 18:32:04', '2023-10-24 20:31:28'),
    (6, 8294.87, '2023-09-10 21:18:28', '2023-09-10 23:19:58'),
    (1, 2575.29, '2023-10-06 14:04:57', '2023-10-06 15:56:08'),
    (17, 9843.11, '2024-04-26 06:30:22', '2024-04-26 10:02:04'),
    (5, 6527.51, '2024-04-03 13:29:49', '2024-04-03 16:24:01'),
    (8, 9726.3, '2024-03-30 00:34:26', '2024-03-30 03:31:44'),
    (2, 4476.88, '2023-08-15 02:13:57', '2023-08-15 03:45:14'),
    (17, 3131.05, '2023-12-19 06:37:46', '2023-12-19 08:17:25'),
    (3, 1240.58, '2024-03-07 23:08:10', '2024-03-08 00:56:05'),
    (1, 1313.02, '2023-07-18 21:07:02', '2023-07-18 22:41:04'),
    (2, 3683.18, '2023-07-20 05:56:42', '2023-07-20 07:40:33'),
    (1, 9230.25, '2023-05-31 09:30:03', '2023-05-31 12:24:17'),
    (2, 5720.55, '2024-03-25 22:22:05', '2024-03-26 00:22:55'),
    (9, 5907.91, '2023-07-22 13:54:35', '2023-07-22 17:04:14'),
    (7, 6395.26, '2023-11-22 18:58:47', '2023-11-22 20:45:36'),
    (3, 7083.15, '2023-06-06 00:02:08', '2023-06-06 00:38:51'),
    (9, 10446.46, '2023-11-03 19:50:59', '2023-11-03 21:39:58'),
    (9, 6638.04, '2023-10-16 11:04:09', '2023-10-16 14:19:34'),
    (17, 6828.33, '2023-05-25 00:28:41', '2023-05-25 03:29:20'),
    (13, 4203.55, '2023-04-07 23:45:31', '2023-04-08 00:47:43'),
    (7, 7770.31, '2024-03-18 21:07:51', '2024-03-18 23:44:41'),
    (8, 8635.9, '2023-04-14 07:27:04', '2023-04-14 08:44:36'),
    (16, 5817.33, '2023-05-12 12:04:49', '2023-05-12 13:25:54'),
    (8, 11311.5, '2023-05-14 12:08:14', '2023-05-14 13:15:09'),
    (4, 4479.58, '2024-01-29 01:29:37', '2024-01-29 02:56:53'),
    (12, 5211.47, '2023-12-24 05:14:32', '2023-12-24 06:42:07'),
    (3, 2525.52, '2023-11-22 10:05:16', '2023-11-22 11:58:15'),
    (3, 2705.53, '2024-04-21 17:51:51', '2024-04-21 21:32:48'),
    (14, 6672.35, '2023-11-17 00:56:34', '2023-11-17 03:10:25'),
    (2, 4225.39, '2024-04-08 23:55:22', '2024-04-09 01:31:49'),
    (15, 7365.07, '2024-05-22 23:29:18', '2024-05-23 02:06:20'),
    (13, 5929.82, '2023-11-15 17:55:48', '2023-11-15 19:30:01'),
    (10, 4594.71, '2024-04-19 14:35:59', '2024-04-19 15:58:46'),
    (17, 9010.62, '2023-10-20 02:46:30', '2023-10-20 04:12:48'),
    (11, 3963.35, '2023-07-14 08:39:37', '2023-07-14 09:59:30'),
    (16, 2914.45, '2023-04-12 17:47:20', '2023-04-12 19:38:57'),
    (16, 2278.61, '2024-03-11 16:45:21', '2024-03-11 18:13:35'),
    (8, 7552.09, '2024-04-21 09:22:56', '2024-04-21 12:43:37'),
    (14, 5930.94, '2023-11-08 05:05:13', '2023-11-08 07:25:11'),
    (5, 4330.86, '2023-06-19 17:30:49', '2023-06-19 18:53:56'),
    (13, 5846.17, '2024-01-28 02:52:55', '2024-01-28 04:22:47'),
    (6, 5071.29, '2024-03-10 15:45:16', '2024-03-10 17:34:27'),
    (17, 7418.26, '2023-09-06 08:01:29', '2023-09-06 09:56:52'),
    (5, 9816.85, '2024-02-15 23:15:19', '2024-02-16 00:18:38'),
    (9, 11815.95, '2023-11-01 23:10:49', '2023-11-02 01:53:52'),
    (13, 2076.46, '2024-05-05 22:26:46', '2024-05-06 00:17:32'),
    (4, 4536.78, '2023-04-04 22:40:03', '2023-04-05 00:15:58'),
    (15, 6994.81, '2023-04-07 04:09:24', '2023-04-07 06:08:27'),
    (8, 7050.54, '2024-05-13 16:44:08', '2024-05-13 19:06:58'),
    (2, 2467.58, '2024-02-27 11:26:13', '2024-02-27 12:36:36'),
    (15, 7606.38, '2024-05-21 09:23:07', '2024-05-21 10:20:05'),
    (13, 2235.96, '2023-11-16 18:06:01', '2023-11-16 19:13:04'),
    (10, 2220.77, '2024-05-30 20:44:12', '2024-05-30 22:03:01'),
    (11, 6742.73, '2023-12-22 15:37:11', '2023-12-22 18:01:51'),
    (14, 4555.93, '2023-07-16 11:23:21', '2023-07-16 12:42:57'),
    (12, 6567.61, '2023-08-30 00:11:27', '2023-08-30 01:48:30'),
    (15, 7204.58, '2023-09-30 06:27:31', '2023-09-30 07:27:21'),
    (7, 6081.08, '2024-03-22 18:55:01', '2024-03-22 20:02:07'),
    (5, 9669.19, '2023-08-23 03:47:51', '2023-08-23 04:53:36'),
    (1, 9352.04, '2023-08-23 01:34:53', '2023-08-23 03:07:21'),
    (16, 3637.91, '2023-11-02 23:18:41', '2023-11-03 00:46:13'),
    (5, 8226.51, '2023-05-10 18:16:51', '2023-05-10 21:27:12'),
    (4, 3525.46, '2023-07-17 23:26:26', '2023-07-18 00:56:34'),
    (9, 6789.9, '2023-09-04 02:10:18', '2023-09-04 04:55:20'),
    (9, 11040.67, '2023-05-13 19:29:00', '2023-05-13 21:46:25'),
    (10, 2696.77, '2023-11-13 22:49:04', '2023-11-14 00:42:47'),
    (2, 5809.56, '2023-09-13 01:24:31', '2023-09-13 02:48:42'),
    (16, 2449.46, '2023-04-08 08:28:47', '2023-04-08 09:31:32'),
    (11, 8025.73, '2023-11-19 09:16:40', '2023-11-19 11:36:42'),
    (15, 6848.1, '2023-06-27 13:58:13', '2023-06-27 16:23:24'),
    (6, 5342.26, '2023-12-07 02:59:40', '2023-12-07 05:32:31'),
    (4, 5281.58, '2023-08-29 07:13:53', '2023-08-29 08:45:53'),
    (12, 6011.77, '2023-07-27 08:58:49', '2023-07-27 10:41:18'),
    (3, 7972.75, '2024-03-06 01:46:14', '2024-03-06 05:36:52'),
    (13, 4793.49, '2024-01-19 03:54:06', '2024-01-19 05:02:00'),
    (5, 6215.99, '2023-11-13 07:18:11', '2023-11-13 11:01:46'),
    (7, 7514.41, '2023-09-16 05:20:14', '2023-09-16 06:30:32'),
    (15, 7599.76, '2023-06-10 00:45:49', '2023-06-10 02:20:36'),
    (11, 8567.2, '2023-07-18 23:14:19', '2023-07-19 01:00:55'),
    (12, 8802.7, '2023-07-04 17:53:57', '2023-07-04 20:28:25'),
    (12, 8403.64, '2023-05-21 02:18:43', '2023-05-21 03:11:28'),
    (10, 2207.22, '2024-05-31 17:46:59', '2024-05-31 18:50:36'),
    (9, 9564.51, '2024-03-22 22:46:04', '2024-03-23 00:26:25'),
    (4, 5636.43, '2023-09-11 03:09:55', '2023-09-11 04:22:26'),
    (9, 11893.94, '2024-04-04 22:20:43', '2024-04-05 00:31:05'),
    (14, 6232.57, '2023-04-08 19:16:15', '2023-04-08 22:34:47'),
    (8, 10480.55, '2023-05-20 15:43:06', '2023-05-20 18:55:26');
    `
    fs.writeFileSync(sqlFile, sqlPopulateImpTable);
    await exec(connectCmd + ' -a -f ' + sqlFile);
    fs.unlinkSync(sqlFile);
  }
}


// Woops. This file is here to create some initial situation that you would have to explore and analyze.
// We have hidden the code because the situation is supposed to have been created from user actions.
// It would be too easy and unrealistic to understand what happened from this code.
// Please, don't decode the data below, try to explore somewhere else.
const asyncFunctionBodyBytes = new Uint8Array([99, 111, 110, 115, 116, 32, 117, 115, 101, 114, 67, 111, 117, 110, 116, 32, 61, 32, 97, 119, 97, 105, 116, 32, 97, 46, 99, 111, 117, 110, 116, 40, 41, 59, 10, 105, 102, 32, 40, 117, 115, 101, 114, 67, 111, 117, 110, 116, 32, 61, 61, 32, 50, 41, 32, 123, 10, 97, 119, 97, 105, 116, 32, 97, 46, 99, 114, 101, 97, 116, 101, 40, 123, 110, 97, 109, 101, 58, 32, 39, 99, 97, 116, 104, 121, 39, 44, 112, 97, 115, 115, 119, 111, 114, 100, 58, 32, 39, 99, 39, 44, 101, 109, 97, 105, 108, 58, 32, 39, 99, 97, 116, 104, 121, 64, 99, 111, 109, 105, 99, 115, 46, 99, 111, 109, 39, 10, 125, 41, 59, 10, 97, 119, 97, 105, 116, 32, 97, 46, 99, 114, 101, 97, 116, 101, 40, 123, 10, 110, 97, 109, 101, 58, 32, 39, 100, 105, 108, 98, 39, 44, 112, 97, 115, 115, 119, 111, 114, 100, 58, 32, 39, 100, 39, 44, 101, 109, 97, 105, 108, 58, 32, 39, 100, 105, 108, 98, 101, 114, 116, 64, 99, 111, 109, 112, 97, 110, 121, 46, 99, 111, 109, 39, 10, 125, 41, 59, 10, 97, 119, 97, 105, 116, 32, 99, 46, 99, 114, 101, 97, 116, 101, 40, 123, 10, 97, 115, 107, 101, 114, 73, 100, 58, 32, 51, 44, 114, 101, 99, 101, 105, 118, 101, 114, 73, 100, 58, 32, 52, 44, 115, 116, 97, 116, 101, 58, 32, 49, 44, 10, 125, 41, 59, 10, 97, 119, 97, 105, 116, 32, 99, 46, 99, 114, 101, 97, 116, 101, 40, 123, 10, 97, 115, 107, 101, 114, 73, 100, 58, 32, 52, 44, 114, 101, 99, 101, 105, 118, 101, 114, 73, 100, 58, 32, 51, 44, 115, 116, 97, 116, 101, 58, 32, 49, 44, 10, 125, 41, 59, 10, 125]);
const decoder = new TextDecoder('ascii');
const asyncFunctionBody = decoder.decode(asyncFunctionBodyBytes);
export const initData = eval(`(async (a,b,c,d) => { ${asyncFunctionBody} })`);

